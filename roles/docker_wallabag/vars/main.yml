---
# vars file for docker_wallabag

app_name:  wallabag

network_base_container:
      - traefik
      - '{{ "adminer" if adminer_enabled else "traefik" }}'
      - mail-relay

app_docker_env:
  mysql:
      MYSQL_ROOT_PASSWORD:             "{{ lookup('password', '{{ selfhosted_credential_store }}/{{ app_name }}_mysql_root_secret chars=ascii_letters,digits length=32') }}"
      SYMFONY__ENV__DATABASE_DRIVER:   'pdo_mysql'
      SYMFONY__ENV__DATABASE_HOST:     '{{ app_name }}-db'
      SYMFONY__ENV__DATABASE_PORT:     '3306'
      SYMFONY__ENV__DATABASE_NAME:     'symfony'
      SYMFONY__ENV__DATABASE_USER:     'symfony'
      SYMFONY__ENV__DATABASE_PASSWORD: "{{ lookup('password', '{{ selfhosted_credential_store }}/{{ app_name }}_database_user_secret chars=ascii_letters,digits length=32') }}"
      SYMFONY__ENV__DATABASE_CHARSET:  'utf8mb4'
      SYMFONY__ENV__MAILER_HOST:       'mail-relay'
      SYMFONY__ENV__MAILER_USER:       ''
      SYMFONY__ENV__MAILER_PASSWORD:   ''
      SYMFONY__ENV__FROM_EMAIL:        'wallabag@example.com'
      SYMFONY__ENV__DOMAIN_NAME:       'https://{{ app_server_fqdn }}'
      POPULATE_DATABASE:               'True'
      SYMFONY_ENV:                     'prod'
  pgsql:
      POSTGRES_PASSWORD:                   "{{ lookup('password', '{{ selfhosted_credential_store }}/{{ app_name }}_database_user_secret chars=ascii_letters,digits length=32') }}"
      POSTGRES_USER:                       '{{ app_db_user }}'
      SYMFONY__ENV__DATABASE_DRIVER:       'pdo_pgsql'
      SYMFONY__ENV__DATABASE_HOST:         '{{ app_name }}-db'
      SYMFONY__ENV__DATABASE_PORT:         '5432'
      SYMFONY__ENV__DATABASE_DRIVER_CLASS: 'Wallabag\CoreBundle\Doctrine\DBAL\Driver\CustomPostgreSQLDriver'
      SYMFONY__ENV__DATABASE_NAME:         'symfony'
      SYMFONY__ENV__DATABASE_USER:         'symfony'
      SYMFONY__ENV__DATABASE_PASSWORD:     "{{ lookup('password', '{{ selfhosted_credential_store }}/{{ app_name }}_database_user_secret chars=ascii_letters,digits length=32') }}"
      SYMFONY__ENV__DATABASE_CHARSET:      'utf8'
      SYMFONY__ENV__MAILER_HOST:           'mail-relay'
      SYMFONY__ENV__MAILER_USER:           ''
      SYMFONY__ENV__MAILER_PASSWORD:       ''
      SYMFONY__ENV__FROM_EMAIL:            'wallabag@example.com'
      SYMFONY__ENV__DOMAIN_NAME:           'https://{{ app_server_fqdn }}'
      POPULATE_DATABASE:                   'True'
      SYMFONY_ENV:                         'prod'

app_docker_vol:
      - "{{ app_data_dir }}:/var/www/wallabag/data"

app_docker_labels:
      traefik.docker.network:                           'frontend'
      traefik.enable:                                   'true'
      traefik.frontend.rule:                            'Host:{{ app_server_fqdn }}'
      traefik.port:                                     '80'
      traefik.protocol:                                 'http'
      traefik.frontend.headers.referrerPolicy:          'origin-when-cross-origin'
      traefik.frontend.headers.SSLRedirect:             'true'
      traefik.frontend.headers.STSSeconds:              '315360000'
      traefik.frontend.headers.browserXSSFilter:        'true'
      traefik.frontend.headers.contentTypeNosniff:      'true'
      traefik.frontend.headers.forceSTSHeader:          'true'
      traefik.frontend.headers.STSIncludeSubdomains:    'true'
      traefik.frontend.headers.STSPreload:              'true'
      traefik.frontend.headers.frameDeny:               'false'
      traefik.frontend.headers.customFrameOptionsValue: 'SAMEORIGIN'
      com.centurylinklabs.watchtower.enable:            '{{ app_watchtower }}'

backup_script_block: |
    #
    # backup the database
    {% if app_db_type == 'mysql' %}
    sudo docker exec {{ app_name }}-db mysqldump --single-transaction -h localhost -u {{ app_db_user }} -p{{ lookup('password', '{{ selfhosted_credential_store }}/{{ app_name }}_database_user_secret chars=ascii_letters,digits length=32') }} {{ app_db_name }} > {{ app_datadump_dir }}/db_dump_{{ app_db_type }}_{{ app_name }}.sql
    {% elif app_db_type == 'pgsql' %}
    sudo docker exec {{ app_name }}-db pg_dump -c -U {{ app_db_user }} {{ app_db_name }} > {{ app_datadump_dir }}/db_dump_{{ app_db_type }}_{{ app_name }}.sql
    {% endif %}
    
    # backup the data dir
    {{ restic_install_path }}/restic backup {{ app_data_dir }} {{ app_datadump_dir }}
    #

...